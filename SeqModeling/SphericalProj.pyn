#SphericalProj.pyn

def GetSphereDataset(cId, interRp=0, contracting=0, eps=0.1):
	bList = GetChainById(cId)
	if bList.Count < 3:
		return None
	bType = vv.Dataset.BodyForId(cId).Type
	for b in bList: 
		b.Type = bType
	bList = cs.ToSphere(bList, contracting)
	if interRp>0:
		bList = Interpolate(bList, interRp, eps)
		for b in bList: 
			b.Hidden = b.Id.startswith('i')
	bList[0].Type = 105
	bList[bList.Count-1].Type = 110
	return bList

def ShowSphere(bList, info=None, hsize=1, gsize=3.0):
	mp = New.Map3DView(bList)
	mp.ReadOnly = True
	mp.ShowPerformance = False
	mp.ShowBoundingBox = True
	mp.MapDepth = 0.5*(mp.Width+mp.Height)
	mp.GlyphSize = gsize
	mp.HiddenBodySize = hsize
	mp.Show()
	mp.CentralizeView()
	if info != None:
		mp.Description = info.ToStr()
	return mp

def NotExits(vw):
	return (vw == None) or vw.TheForm.IsDisposed

def SphereUnfold(bList, cf):
	global tgtView
	cf = max(0, min(1, cf))
	bList = New.BodyListClone(bList)
	cs.ShrinkSphere(bList, cf)
	bs = New.BodyList()
	bx = New.Body('A999.0')
	bx.Name = bList[0].Name
	bx.Type = 0
	bs.Add(bx.Clone())
	for b in bList:
		bx.Add(b.X, b.Y, b.Z)
		bx.Name = b.Name
		bx.Id = b.Id
		bx.Type = 0
		bs.Add(bx.Clone())
	bs = Interpolate1Chain(bs, rp=5, eps=0.1)
	bs[0].Type = 105
	bs[bs.Count-1].Type = 110
	if NotExits(tgtView):
		tgtView = New.Map3DView(New.BodyListClone(bs)).Show()
		tgtView.CentralizeView()
		tgtView.ShowBoundingBox = False
	tgtView.MoveBodiesTo(bs, 5, 50, 0, 0)

def ShrinkSphere(bList, cf):
	global tgtView	
	cf = max(0, min(1, cf))
	bList = New.BodyListClone(bList)
	cs.ShrinkSphere(bList, cf)
	bList = Interpolate1Chain(bList, rp=5, eps=0.1)
	if NotExits(tgtView):
		tgtView = New.Map3DView(bList)
		tgtView.ShowBoundingBox = False
		tgtView.Show()
		tgtView.CentralizeView(False)
	tgtView.MoveBodiesTo(bList, 5, 50, 0, 0)


def SphereView(pId):
	global tgtView
	tgtView = None
	tstFct = ShrinkSphere if vv.ModifierKeys.ControlPressed else SphereUnfold	
	bList = GetSphereDataset(pId, interRp=0)
	if bList.Count > 1:
		maxSz = 0.75*(bList[0].Length + bList[1].Length)
		bList = New.BodyList([b for b in bList if b.Length<maxSz])
	#ShowSphere(bList)
	cfList = [0.01 * k for k in range(100)]
	cfList = 9*(cfList + cfList[::-1])
	for k, cf in enumerate(cfList):
		tstFct(bList, cf)
		tgtView.Title = f'CF: {k}: {cf}'
		vv.DoEvents()
		if (k%19==0) and tstFct==SphereUnfold: tgtView.CentralizeView(False)
		if vv.ModifierKeys.AltPressed: break	

def ProteinS2Map(pList, atlasName, samplingDist, ctrF):
	if len(pList) == 1:
		pId = pList[0]
		info = MapInfo()
		info.pId = pId
		bList = GetSphereDataset(pId, interRp=0, contracting=0.9)
		#ShowPDB(pId, rp=intRp, eps=0.1, chainNames=GetChainName(pId), includeHA=False)
		#ShowSphere(bList)
		mds = NewMds(New.NumberTable(bList, 3), 
			epochs=3000, initExag=6.0, finalExag=1.0, ppl=0.1, repeats=0, refreshFreq=200, 
			zoomFactor=1.0, glyphSet='Ordered 64|36 Clusters|Red Green', glyphSize=1.0, glyphOpacity=1.0)
		RunMds(mds, info=info, repeats=0)
		bList = Interpolate(mds.BodyList, rp=5, eps=0.1)
		for b in bList:
			b.Hidden = True if b.Id[0] == 'i' else False
		mp = New.MapSnapshot(bList).Show()
		mp.HiddenBodySize = 3
		mp.NormalizeView()
		mp.Description = info.ToStr()
		mds.Close()
		return

	mds = NewMds(epochs=3000, initExag=6.0, finalExag=1.0, ppl=0.1, repeats=0, refreshFreq=0, 
		zoomFactor=1.0, glyphSet='Ordered 64|36 Clusters|Red Green', glyphSize=6.0, glyphOpacity=1.0)
	atlasName = 'S2.' + atlasName
	mapStore = NewMapStore(atlasName, is3D=False, clearStore=True)			
	contractingF = ctrF
	samplingDist = 0.1
	info = MapInfo()
	info.Mtd = 'S2'
	info.Set('cF', contractingF)
	if samplingDist > 0:
		pList = ss.FlatSampling(pList, samplingDist)
	for k, pId in enumerate(pList):				
		bList = GetSphereDataset(pId, interRp=0, contracting=contractingF)
		if bList == None:
			continue
		info.pId = pId
		info.pLen = bList.Count
		vv.Title = f'Embedding S2 {pId}/{bList.Count:,}: {k+1}-th of {len(pList)}'
		RunMds(mds, info=info, repeats=0, nt=New.NumberTable(bList, 3))
		mapStore.AddMap()
	MatchProteinMap(mapStore.atlas, 70)
	mapStore.Close()
	mds.Close()
	New.Atlas(atlasName).Show()

'''

'''

