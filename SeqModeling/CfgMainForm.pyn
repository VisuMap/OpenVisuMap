#MenuLabels P-ChmX P-Web P-3D SeqMap P-Open Sh-LocPDB AtlasView TypeProtein P-2D ProteinMap
vv.Import('SeqVis.pyn')
vv.Import('PdbLoad.pyn')

def SortByPosX(idList):
	idList.sort(key=lambda id:vv.Dataset.BodyForId(id).X)

def GetAAGroup(idx=0):
	aaHydrophobic = 'AVILMFYW'
	aaPolarUncharged = 'STNQ'
	aaSpecial = 'CUGP'
	aaNoPolar = 'AGILMPV'
	aaCarboxyl = 'DE'
	aaAmine = 'RHK'
	aaAromatic = 'FWY'
	aaHydroxyl = 'STY'

	match idx:
		case 0:
			return 'AVILMFYW|STNQ|CGP|RHK|DE'
		case 1:
			return '|'.join( [ aaHydrophobic, aaPolarUncharged,  aaSpecial, aaNoPolar, aaCarboxyl, aaAmine, aaAromatic, aaHydroxyl] )
		case 2:
			return aaHydrophobic
		case 3:
			return aaAromatic
		case 9:
			return '|'.join('AVILMFYWSTNQCGPRHKDE')


def MainProc(menuKey):
	atlasName = f'{vv.Dataset.Name}/{vv.Map.Name}'
	pSelected = list(pp.SelectedItems)
	pId = pSelected[0] if len(pSelected) > 0 else None
	pList = pSelected if len(pSelected) > 0 else [b.Id for b in vv.Dataset.BodyListEnabled()]

	match menuKey:
		case 'P-ChmX': ShowChimeraX(pId)
		case 'P-Web':  ShowWeb(pId)
		case 'P-2D':
			if len(pSelected) == 1: atlasName = None
			UnFoldProteinList(pList, epochs=2000, mainChain=True, includeHA=False, atName=atlasName, stretch=0.0, iconWidth=50, smtRatio=0.0)
		case 'P-3D':
			atlasName += '-3D'
			SortByPosX(pSelected)
			if len(pSelected) == 1: atlasName = None
			justMainChain = vv.ModifierKeys.ControlPressed
			ShowProteinList(pSelected, mainChain=justMainChain, includeHA=False, atName=atlasName, smtRatio=0.0, glyphSize=1.5, glyphOpacity=0.5)
		case 'SeqMap':
			aaGroups = GetAAGroup(idx=0)
			atlasName += '-Seq'
			if len(pSelected) == 1: atlasName = None
			CreateSeqMaps(pSelected, aaGroups, epochs=5000, initExag=6.0, ppl=0.1, saveTo=atlasName, decay=1.0, augCfg='s|25|0.25|1.0')
		case 'P-Open': 
			if pId == None:
				vv.Message('No protein selected')
				vv.Return()
			OpenCifFile(pId)
		case 'Sh-LocPDB':
			from os.path import exists
			vv.SelectedItems = [b.Id for b in vv.Map.BodyList if exists(PidToPath(b.Id))]
		case 'ProteinMap':
			CreateProteinMap2(pList, epochs=2000, repeats=1, ppl=0.025, staged=False, initExag=6.0, finalExag=1.0,
				using3DInfo=False, aaGroups=GetAAGroup(0), waveCount=25)
			'''
			gList = 'AVILMFYWSTNQCGPRHKDE'			
			mStore = AtlasMapStore('Test-Maps 1', 'MdsCluster', True)
			for wCnt in [17, 25]:
				for aaGroups in gList:
					CreateProteinMap2(pList, epochs=4000, repeats=0, ppl=0.25, staged=True, initExag=6.0, finalExag=1.0,
						using3DInfo=False, aaGroups=aaGroups, waveCount=wCnt)
					mStore.AddMap().Close()
			mStore.atlas.Show()
			'''

		case 'TypeProtein':
			TypeProteinList(pList)
		case 'AtlasView':
			atlasName = f'{vv.Dataset.Name}/{vv.Map.Name}'
			if atlasName not in vv.AtlasManager.GetAtlasList():
				vv.Message('No atlas found with the name: ' + atlasName)
				vv.Return()
			atlas = New.Atlas(atlasName)
			if not vv.ModifierKeys.ControlPressed:
				atlas.MakeFloating()
				if len(pSelected) > 0:
					notSelected = [ item for item in atlas.Items if item.Name not in set(pSelected) ]
					atlas.RemoveItems(notSelected)
					atlas.ResetView()			
			atlas.Show()

MainProc(vv.EventSource.Item)


'''

dsList = [ 	
	'MainlyAlpha',
	'MainlyBeta',
	'Developmental',
	'Immune System',
	'Reproductive',
	'ECODE topology',
	'BetaSandwiches',
	'Local-Symmetry',
	'LocalVirus',
	'Beta barrels',
	'Trans regulation',
	'Membran',
	'Proteasome',
	'Unstrucuted',
	'Artifacts',
	'Ribosome',
	'Golgi',
	'Mitochondrian',
	'Diseas',
	'TranscriptionFactor', ]


ds = vv.Dataset
bs = list(ds.BodyList)
items = New.ValueItemList(bs)
for k, item in enumerate(items):
	item.Value = ds.GetValueAt(k, 5)
New.SpectrumView(items).Show()

'''
