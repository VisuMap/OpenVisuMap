#MenuLabels P-ChmX P-Web P-3D SeqMap P-Open Sh-LocPDB AtlasView TypeProtein P-2D ProteinMap
vv.Import('SeqVis.pyn')
vv.Import('PdbLoad.pyn')

def SortByPosX(idList):
	idList.sort(key=lambda id:vv.Dataset.BodyForId(id).X)

def MainProc(menuKey):
	atlasName = f'{vv.Dataset.Name}/{vv.Map.Name}'
	pSelected = list(pp.SelectedItems)
	pId = pSelected[0] if len(pSelected) > 0 else None
	pList = lambda: pSelected if len(pSelected) > 0 else [b.Id for b in vv.Dataset.BodyListEnabled()]

	match menuKey:
		case 'P-ChmX': ShowChimeraX(pId)
		case 'P-Web':  ShowWeb(pId)
		case 'P-2D':
			if len(pSelected) == 1: atlasName = None
			UnFoldProteinList(pList(), epochs=2000, mainChain=True, includeHA=False, atName=atlasName, stretch=0.0, iconWidth=50, smtRatio=0.0)
		case 'P-3D':
			atlasName += '-3D'
			SortByPosX(pSelected)
			if len(pSelected) == 1: atlasName = None
			justMainChain = vv.ModifierKeys.ControlPressed
			ShowProteinList(pSelected, mainChain=justMainChain, includeHA=False, atName=atlasName, smtRatio=0.0, glyphSize=1.5, glyphOpacity=0.5)
		case 'SeqMap':
			aaGroups = 'AVILMFYW|STNQ|CGP|RHK|DE'
			atlasName += '-Seq'
			if len(pSelected) == 1: atlasName = None
			CreateSeqMaps(pSelected, aaGroups, epochs=5000, initExag=6.0, ppl=0.1, saveTo=atlasName, decay=1.0, augCfg='s|25|0.25|1.0')
		case 'P-Open': 
			if pId == None:
				vv.Message('No protein selected')
				vv.Return()
			OpenCifFile(pId)
		case 'Sh-LocPDB':
			from os.path import exists
			vv.SelectedItems = [b.Id for b in vv.Map.BodyList if exists(PidToPath(b.Id))]
		case 'ProteinMap':
			aaGroups = 'AVILMFYW|STNQ|CGP|RHK|DE'
			CreateProteinMap2(pList(), epochs=5000, repeats=1, ppl=0.2, initExag=4.0, finalExag=0.5, 
					using3DInfo=False, aaGroups=aaGroups, waveLen=256, waveCount=32)
		case 'TypeProtein':
			TypeProteinList(pList())
		case 'AtlasView':
			atlasName = f'{vv.Dataset.Name}/{vv.Map.Name}'
			if atlasName not in vv.AtlasManager.GetAtlasList():
				vv.Message('No atlas found with the name: ' + atlasName)
				vv.Return()
			atlas = New.Atlas(atlasName)
			if not vv.ModifierKeys.ControlPressed:
				atlas.MakeFloating()
				if len(pSelected) > 0:
					notSelected = [ item for item in atlas.Items if item.Name not in set(pSelected) ]
					atlas.RemoveItems(notSelected)
					atlas.ResetView()			
			atlas.Show()

MainProc(vv.EventSource.Item)


'''

dsList = [ 	
	'MainlyAlpha',
	'MainlyBeta',
	'Developmental',
	'Immune System',
	'Reproductive',
	'ECODE topology',
	'BetaSandwiches',
	'Local-Symmetry',
	'LocalVirus',
	'Beta barrels',
	'Trans regulation',
	'Membran',
	'Proteasome',
	'Unstrucuted',
	'Artifacts',
	'Ribosome',
	'Golgi',
	'Mitochondrian',
	'Diseas',
	'TranscriptionFactor', ]

for ds in dsList[12:]:
	vv.OpenDatasetMap(ds, 'mapK')
	vv.ClickMenu('SeqVis/P-2D')
	vv.FindFormList('Atlas')[0].Close()

aaGroups='AVILMFYW|STNQ|CGP|RHK|DE'
'A|V|I|L|M|F|Y|W|S|T|N|Q|C|G|P|R|H|K|D|E'
'AVILMFYW|STNQCGPRHKDE'
'AVILMFYW|STNQ|C|G|P|RHK|DE'
'GAVMLIP|FY|STNQCW|DE|HKR

modOp = NewModuleOp(aaGroups)

bSet = set()
bs = vv.Dataset
for k, b in enumerate(bs.BodyList):
	seq = bs.GetDataAt(k, 2)
	seq = SeqMod(modOp, seq)
	if seq in bSet:
		b.Disabled = True
	else:
		b.Disabled = False
		bSet.add(seq)
vv.Map.RedrawAll()

'''
