#MenuLabels P-ChmX P-Web P-2D P-3D SeqMap P-LSeq P-Open Sh-LocPDB ProteinMap ProteinMap2 ProteinMap3 TypeProtein AtlasView
vv.Import('SeqVis.pyn')
vv.Import('PdbLoad.pyn')

def MainProc(menuKey):
	pSelected = pp.SelectedItems
	atlasName = f'{vv.Dataset.Name}/{vv.Map.Name}'
	if menuKey.startswith('P-'):
		if pSelected.Count == 0:
			pId = vv.GuiManager.GetClipboard()
			if len(pId) != 4:
				vv.Message('No protein selected')
				return
			pSelected = [ pId ]
		else:
			pId = pSelected[0]
	else:
		pList = pSelected if pSelected.Count > 1 else [b.Id for b in vv.Dataset.BodyListEnabled()]

	match menuKey:
		case 'P-ChmX': ShowChimeraX(pId)
		case 'P-Web':  ShowWeb(pId)
		case 'P-LSeq': ShowSeqInfo(pId)
		case 'P-2D':
			if pSelected.Count == 1: atlasName = None
			UnFoldProteinList(pSelected, epochs=2000, mainChain=True, includeHA=False, atName=atlasName, stretch=0.1, iconWidth=50, smtRatio=0.0)
		case 'P-3D':
			atlasName += '-3D'
			if pSelected.Count == 1: atlasName = None
			ShowProteinList(pSelected, mainChain=False, includeHA=False, atName=atlasName, smtRatio=0.0)
		case 'SeqMap':
			aaGroups = 'AVILMFYW|STNQ|CGP|RHK|DE'
			atlasName += '-Seq'
			if pSelected.Count == 1: atlasName = None
			CreateSeqMaps(pSelected, aaGroups, epochs=5000, initExag=6.0, ppl=0.1, saveTo=atlasName, decay=1.0, augCfg='s|25|0.25|1.0')
		case 'P-Open': 
			OpenCifFile(pId)
		case 'Sh-LocPDB':
			from os.path import exists
			vv.SelectedItems = [b.Id for b in vv.Map.BodyList if exists(PidToPath(b.Id))]
		case 'ProteinMap':
			aaGroups = 'AVILMFYW|STNQ|CGP|RHK|DE'
			CreateProteinMap(pList, epochs=2000, ppl=0.0015, aaGroups=aaGroups, sections=10)
		case 'ProteinMap2':
			aaGroups = 'AVILMFYW|STNQ|CGP|RHK|DE'
			CreateProteinMap2(pList, epochs=5000, repeats=1, ppl=0.2, initExag=6.0, finalExag=1.0, using3DInfo=True, aaGroups=aaGroups, waveLen=256, waveCount=32)
		case 'ProteinMap3':
			CreateProteinMap3(pList, epochs=5000, repeats=1, ppl=0.15, initExag=8.0, finalExag=1.0, waveLen=256, waveCount=32)
		case 'TypeProtein':
			TypeProteinList(pList)
		case 'AtlasView':
			atlasName = f'{vv.Dataset.Name}/{vv.Map.Name}'
			if atlasName not in vv.AtlasManager.GetAtlasList():
				vv.Message('No atlas found with the name: ' + atlasName)
				vv.Return()
			atlas = New.Atlas(atlasName)
			atlas.MakeFloating()
			if pSelected.Count > 0:
				notSelected = [ item for item in atlas.Items if item.Name not in set(pSelected) ]
				atlas.RemoveItems(notSelected)
				atlas.ResetView()
			atlas.Show()

MainProc(vv.EventSource.Item)


'''
aaGroups = 'RHK|DE'
aaGroups = 'A|V'
aaGroups = 'RHK|DE'
aaGroups = 'A|V|L'
'AVILMFYW|STNQ|CGP|RHK|DE'
'A|V|I|L|M|F|Y|W|S|T|N|Q|C|G|P|R|H|K|D|E'
'AVILMFYW|STNQCGPRHKDE'
'AVILMFYW|STNQ|C|G|P|RHK|DE'
'GAVMLIP|FY|STNQCW|DE|HKR
'''
