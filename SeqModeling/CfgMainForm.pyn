#MenuLabels SeqMap SeqMap2 SeqMap3 SeqMap4 SeqInfo - ProteinMap ProteinMap2 ProteinMap3 ProteinMap4

vv.Import('SeqVis.pyn')

def MainProc(menuKey):
	if pp.SelectedItems.Count < 2:
		pList = [b.Id for b in pp.Dataset.BodyListEnabled()]
	else:
		pList = pp.SelectedItems
	#dstAtlas = 'TestMaps'
	dstAtlas = None
	match menuKey:
		case 'SeqMap':
			CreateMaps(pp.SelectedItems, epochs=10000, winSize=0, repeats=1, ppl=0.15,  saveTo=dstAtlas, 
				is3D=True, initExag=4.0, finalExag=1.0, glyphSize=0.8, glyphOpacity=0.5, augCfg='a|500|2.0|2.0')
		case 'SeqMap2':
			CreateMaps(pp.SelectedItems, epochs=10000, winSize=-1, repeats=1, ppl=0.15,  saveTo=dstAtlas,
				is3D=False, initExag=3.0, finalExag=1.0, glyphSize=0.8, glyphOpacity=0.5, augCfg='x|0.001')
		case 'SeqMap3':
			for f in [ 0.42, 0.46 ]:
				n, r, w = 1000, 0.05*f, 0.02*f
				SeqMapByMarkovian(pp.SelectedItems, epochs=5000, repeats=1, ppl=0.2,  saveTo=dstAtlas,
					is3D=False, initExag=4.0, finalExag=1.0, glyphSize=0.5, glyphOpacity=0.5, augCfg=f'a|{n}|{r}|{w}')
		case 'SeqMap4': 
			aug_cfg = 'M|0.5|0.4'
			#aug_cfg = 'm|0.35'
			SeqMapByMarkovian(pp.SelectedItems, epochs=5000, repeats=0, ppl=0.2,  saveTo=dstAtlas,
				is3D=False, initExag=4.0, finalExag=1.0, glyphSize=0.5, glyphOpacity=0.5, augCfg=aug_cfg)
	
		case 'SeqInfo':
			ShowSeqInfo(pp, showSeq=True, showTable=False, barView=False, markovTrans=False, useAApair=False)
	
		case 'ProteinMap':
			CreateProteinMapByCounts(pList, epochs=2000, is3D=False, initExag=4.0, finalExag=1.0, ppl=0.1, repeats=0)
		case 'ProteinMap2':
			CreateProteinMap(pList, epochs=2000, is3D=False, initExag=4.0, ppl=0.1, repeats=0)
		case 'ProteinMap3':
			CreateProteinMap3(pList, epochs=2000, is3D=False, initExag=3.0, finalExag=1.5, ppl=0.15, repeats=0)
		case 'ProteinMap4':
			'''
			for kName in [ 'KeyPairs210', 'KeyPairs210r', 'KeyPairs400' ]:
				ppList = vv.GroupManager.GetGroupLabels(kName)
				#dt = cs.VectorizeProtein2(ppList, 50, pList, GetProteinTable()).ShowHeatMap()
				CreateProteinMap2(pList, ppList=ppList, epochs=5000, is3D=False, initExag=6.0, ppl=0.125, finalExag=1.25, repeats=1)
			'''
			bw = 3
			L = len(ALPHABET)
			for c in ALPHABET:
				p0 = L + P[c]
				ppList = [x+y for x in P for y in P if (p0 + P[x] - P[y]) % L <= bw]
				CreateProteinMap2(pList, ppList=ppList, epochs=5000, 
					is3D=False, initExag=4.0, ppl=0.125, finalExag=1.25, repeats=1)

MainProc(vv.EventSource.Item)

