#MenuLabels ShowData Scanning ReCreateMap Smoothen P-2D P-Seq P-Web P-ChmX HideIPO MarkHelix MarkBeta MainChain RnaChain 'Open PDB' UniChains Flipping Looping SelectPID
vv.Import('SeqVis.pyn')
vv.Import('PdbLoad.pyn')

match vv.EventSource.Item:
	case 'ShowData':
		AssertSeqMap(pp)
		ShowMapData(pp)
	case 'Scanning':
		Scanning(pp, stepSize=1, broadcasting=vv.ModifierKeys.ControlPressed)
	case 'P-Seq':
		ShowAASeq(pp)
	case 'ReCreateMap':
		AssertSeqMap(pp)
		ReCreateMap(pp)
	case 'Smoothen':
		SmoothenCurve(pp, repeats=50)
	case 'P-2D':
		pMap = pp
		UnFoldMap(pMap, repeats=0, epochs=3000, initExag=10.0, ppl=0.15, stretch=1.0, clusterStretch=0, expandFactor=1.0)
		#for s in [0, 0.1, 0.2, 0.4]:
		#for s in [1.0]: UnFoldMap(pMap, repeats=1, epochs=3000, initExag=10.0, ppl=0.15, stretch=s, clusterStretch=0.5, expandFactor=1.0)
	case 'HideIPO':
		HideInterpolates()
	case 'MarkHelix':
		ShowHelix()
	case 'MarkBeta':
		ShowBetaSheet()
	case 'MainChain':
		ShowMainChain(pp)
	case 'RnaChain':
		pp.SelectedItems = [b.Id for b in pp.BodyList if b.Name[0] == 'r']
	case 'Open PDB':
		OpenPDBFile(pp)
	case 'P-Web':
		pId = MapInfo(pp.Description).pId
		ShowWeb(pId)
	case 'P-ChmX':
		pId = MapInfo(pp.Description).pId
		ShowChimeraX(pId)
	case 'UniChains':
		if vv.ModifierKeys.ControlPressed:
			key2type = {}		
		UnifyChains(pp)
	case 'Flipping':		
		FlippingChains(pp)
	case 'Looping':
		LoopingChains(pp, secLen=25)
	case 'SelectPID':
		vv.SelectedItems = [MapInfo(pp.Description).pId]


