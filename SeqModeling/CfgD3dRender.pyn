#MenuLabels ShowData Scanning ReCreateMap Smoothen P-2D P-Seq P-Web P-ChmX HideIPO MarkHelix MarkBeta MainChain RnaChain 'Open PDB' UniChains

vv.Import('SeqVis.pyn')
vv.Import('PdbLoad.pyn')

def LookupKey(key2type, ckey):
	for k in key2type:
		if cs.NWDistance(ckey, k) < 20:
			return k
	key2type[ckey] = 1+len(key2type)
	return ckey

def UnifyChains():
	global key2type
	chains = []
	prefix = []
	curType = -1
	maxKeyLen = 50
	for b in pp.BodyList:
		if b.Id[0] == 'A':
			if b.Type != curType:
				if curType >= 0:
					chains.append( (''.join(prefix[10:maxKeyLen]), curType) )
				curType = b.Type
				prefix = []
			if len(prefix) < maxKeyLen:
				prefix.append(b.Name[0])
	if len(prefix)>0:	# Add the last chain
		chains.append( (''.join(prefix[10:maxKeyLen]), curType) )

	type2type = {}
	if 'key2type' not in globals():
		key2type = {}
	keyLen = len(key2type)
	for ckey, ty in chains:
		ky = LookupKey(key2type, ckey)
		type2type[ty] = key2type[ky]
	newKeys = len(key2type) - keyLen
	vv.Message(f'Added {newKeys} new chains!')

	aIdx = 0  # atom index with a chain
	curType = -1
	for b in pp.BodyList:
		if b.Type != curType:
			curType = b.Type
			aIdx = 0
		else:
			aIdx += 1			
		b.Type = type2type[curType]
		b.Id = f'{b.Id[0]}{b.Type}.{aIdx}'
	pp.RedrawAll()


match vv.EventSource.Item:
	case 'ShowData':
		AssertSeqMap(pp)
		ShowMapData(pp)
	case 'Scanning':
		Scanning(pp, stepSize=1, broadcasting=vv.ModifierKeys.ControlPressed)
	case 'P-Seq':
		ShowAASeq(pp)
	case 'ReCreateMap':
		AssertSeqMap(pp)
		ReCreateMap(pp)
	case 'Smoothen':
		SmoothenCurve(pp, repeats=50)
	case 'P-2D':
		UnFoldMap(pp, repeats=0, epochs=2500, initExag=8.0, ppl=0.2, stretch=1.25, expandFactor=1.1)
	case 'HideIPO':
		HideInterpolates()
	case 'MarkHelix':
		ShowHelix()
	case 'MarkBeta':
		ShowBetaSheet()
	case 'MainChain':
		ShowMainChain(pp)
	case 'RnaChain':
		pp.SelectedItems = [b.Id for b in pp.BodyList if b.Name[0] == 'r']
	case 'Open PDB':
		OpenPDBFile(pp)
	case 'P-Web':
		pId = MapInfo(pp.Description).pId
		ShowWeb(pId)
	case 'P-ChmX':
		pId = MapInfo(pp.Description).pId
		ShowChimeraX(pId)
	case 'UniChains':
		if vv.ModifierKeys.ControlPressed:
			key2type = {}		
		UnifyChains()
					


