#MenuLabels ConfigMaps LinkSelection P-2D P-3D P-Web P-ChmX P-Open Sh-Selected MainChain MatchMap RndV RndH
import random
vv.Import('SeqVis.pyn')
vv.Import('PdbLoad.pyn')

def HighlightItems():
	srcClassName = vv.EventSource.Item.ToString()
	#Only continues if the event is not triggered by vv.SelectedItems call in HighlightBodies().
	if not srcClassName.endswith('.VisuMapImp'):
		sIds = set(vv.SelectedItems)
		pp.SetSelectedItems([x for x in pp.Items if x.Name in sIds])

def RandmizeItemsVertical(atlas):
	for item in atlas.Items:
		item.Top = random.randint(0, 10000) % (atlas.Height - 50) + 15
	atlas.Refresh()

def RandmizeItemsHorizontal(atlas):
	for item in atlas.Items:
		item.Left = random.randint(0, 10000) % (atlas.Width - 50) + 15
	atlas.Refresh()

def MainProc(menuKey):

	if menuKey.startswith('P-'):
		pSelected = pp.GetSelectedItems()
		if pSelected.Count == 0:
			vv.Message('No protein selected')
			return
		else:
			pId = pSelected[0].Name
			
	match vv.EventSource.Item:
		case 'ConfigMaps':
			ConfigAtlasMaps(pp, 1000, 700, gSize=0.75, gOpacity=0.5, hiddenSize=4, reset=False)
		case 'LinkSelection':
			pp.OnItemsSelected = '@vv.SelectedItems = [x.Name for x in pp.GetSelectedItems()]'
			pp.SetEventHandler('ItemsSelected', '@HighlightItems()')
		case 'P-2D':
			#atName = pp.AtlasName + ' 2D'
			atName = 'Test-2D'
			UnfoldAtlasMaps(pp, pp.GetSelectedItems(), atName, stretch=0.25, contractFactor=0.9)
		case 'P-3D':
			ShowPDB(pId, rp=3, eps=0.1, includeHA=False) 
		case 'P-Web':
			ShowWeb(pId)
		case 'P-ChmX':
			ShowChimeraX(pId)
		case 'P-Open':  
			OpenCifFile(pId)
		case 'MainChain':
			for atItem in pp.GetSelectedItems():
				mp = atItem.Open()
				ShowMainChain(mp)
				mp.Close()
		case 'MatchMap':
			MatchProteinMap(pp, 50, 0)
		case 'Sh-Selected':
			vv.EventManager.OnItemsSelected('@ShowSelectedProteins()', pp)
		case 'RndV':
			RandmizeItemsVertical(pp)
		case 'RndH':
			RandmizeItemsHorizontal(pp)


MainProc(vv.EventSource.Item)


