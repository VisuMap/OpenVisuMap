#MenuLabels Eval Save Load
#
#File: PtOperations.pyn
#
vv.Import('PtModelling.pyn')
vv.Import('CommonUtil.pyn')
import pickle

opLabel = vv.EventSource.Item

if 'vmd' not in globals():
  vmd = ModellingConfiguration()

def CheckModel():
	if vmd.NN is None:
		vv.Message('No model has been created!')
		vv.Return()

if opLabel == 'Save':
	CheckModel()
	mdPath = PromptFileForSave("Torch Modeles|*.tmd")
	statDict = vmd.NN.state_dict()
	statDict['layerDimensions'] = vmd.NN.layerDimensions
	torch.save(statDict, mdPath)
	#torch.save(mdv.NN, mdPath)
elif opLabel == 'Load':
	mdPath = PromptFile("Torch Modeles|*.tmd")
	statDict = torch.load(mdPath)
	vmd.NN = NeuralNetwork(statDict['layerDimensions'])
	del statDict['layerDimensions']
	vmd.NN.load_state_dict(statDict)
elif opLabel == 'Eval':
	CheckModel()
	testData = GetDatasetData()
	if testData.shape[1] != vmd.NN.layerDimensions[0]:
		vv.Message("The model input dimension doesn't match that of the current table: %d != %d"%(
			vmd.NN.layerDimensions[0], testData.shape[1]))
		vv.Return()
	ShowPred(vmd.NN, Np2T(testData), GetMapData())
