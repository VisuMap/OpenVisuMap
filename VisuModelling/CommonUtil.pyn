# CommonUtil.pyn
#
def PromptFile( filter ):
	import clr
	clr.AddReference("System.Windows.Forms")
	from System.Windows.Forms import OpenFileDialog
	fd = OpenFileDialog()
	fd.Filter = filter
	fd.RestoreDirectory = True
	fd.ShowDialog()
	if fd.FileName == "":
		quit()
	return fd.FileName

def PromptFileForSave( filter ):
	import clr
	clr.AddReference("System.Windows.Forms")
	from System.Windows.Forms import SaveFileDialog
	fd = SaveFileDialog()
	fd.Filter = filter
	fd.RestoreDirectory = True
	fd.ShowDialog()
	if fd.FileName == "":
		quit()
	return fd.FileName

preDirPath = None

def PromptOpenDirectory():
	import clr
	global preDirPath
	clr.AddReference("System.Windows.Forms")
	clr.AddReference("System")
	from System.Windows.Forms import FolderBrowserDialog
	import System
	fd = FolderBrowserDialog()
	if preDirPath != '':
		fd.SelectedPath = preDirPath
		fd.RootFolder = System.Environment.SpecialFolder.Desktop
	fd.ShowDialog()
	if fd.SelectedPath != '':
		preDirPath = fd.SelectedPath
	return fd.SelectedPath

def ShowHeatmap(nt, fileName):
	hm = New.HeatMap(nt).Show()
	hm.CentralizeColorSpectrum()
	hm.Description = 'Data imported from: ' + fileName
	return hm

def ShowMap(nt):
	map = New.MapSnapshot(True)
	bsList = map.BodyList
	for i in range(bsList.Count):
		b = bsList[i]
		if nt.shape[1] ==  2:
			[b.X, b.Y] = nt[i]
		else:
			[b.X, b.Y, b.Z] = nt[i]
	map.Show();
	return map

def ReportTraining(epoch, cost):
	vmd.log.AddStep(float(cost))
	vmd.log.Title = 'Eochs: %d, Cost: %.3f'%(epoch+1, cost)

def GetMapData(mapName = None):
	if mapName == None:
		outDim = vv.Map.Dimension
		bList = vv.Dataset.BodyListEnabled()
	else:
		map = vv.Dataset.ReadMap(mapName)
		outDim = map.Dimension
		bList = vv.Dataset.ReadMapBodyList(mapName, True)
	N = bList.Count
	D = np.empty([N, outDim], dtype=np.float32)
	for n in range(N):
		b = bList[n]
		D[n] = [b.X, b.Y] if outDim == 2 else [b.X, b.Y, b.Z]
	return D

def GetDatasetData():
	return mm.ToNumpy( vv.GetNumberTableView(True) )

def ShowNumpyMatrix(np):
	nt = mm.ToTable(np)
	New.HeatMap(nt).Show()
