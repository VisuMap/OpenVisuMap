#MenuLabels Eval Save Load
#
#File: VsOperations.pyn
#
vv.Import('VsModelling.pyn')
vv.Import('CommonUtil.pyn')

InitVmd()

opLabel = vv.EventSource.Item

def CheckModel():
	if vmd.model is None:
		vv.Message('No model has been created!')
		vv.Return()

def IsCluster(md):
	try:
		cLayer = md.get_layer('ClstLayer')
		return True		
	except:
		return False

if opLabel == 'Save':
	CheckModel()
	mdPath = PromptOpenDirectory()
	if mdPath != '':
		vmd.model.save(mdPath)
		vv.Message("Saved model!")
elif opLabel == 'Load':
	mdPath = PromptOpenDirectory()
	if mdPath != '':
		vmd.model = tf.keras.models.load_model(mdPath)
		if IsCluster(vmd.model):
			vmd.model.modelType = vmd.CLUSTERING
			mdType = 'Clustering'
		else:
			vmd.model.modelType = vmd.REGRESSION
			mdType = 'Regression'
		vv.Message(f'Loaded model: {mdType} {vmd.model.input_shape[1]}=>{vmd.model.output_shape[1]}')
elif opLabel == 'Eval':
	CheckModel()
	testData = GetDatasetData()
	if testData.shape[1] != vmd.model.input_shape[1]:
		vv.Message("The model input dimension doesn't match that of the current table: %d != %d"%(
			vmd.model.input_shape[1], testData.shape[1]))
		vv.Return()
	ShowPred(vmd.model, testData, GetMapData())
