# Import a loom format file into a heatmap view.
#
vv.Import('AtlasHelp.pyn')

#The following function works for loom files from https://scope.aertslab.org/.
def ImportLoomX10():
	import loompy, numpy
	fileName = PromptFile("Loom Files|*.loom")	
	ds = loompy.connect(fileName, mode='r', validate=False)
	nt = mm.ToTable(ds[:,:])

	if ('Gene' in ds.ra.keys()) and (nt.Rows == len(ds.ra.Gene)):
		uf = New.UniqueNameFinder()
		for row, id in enumerate(ds.ra.Gene):
			nt.RowSpecList[row].Id = uf.LookupName(str(id))

	if ('CellID' in ds.ca.keys()) and (nt.Columns == len(ds.ca.CellID)):
		for row, id in enumerate(ds.ca.CellID):
			nt.ColumnSpecList[row].Name = str(id)

	if ('louvain' in ds.ca.keys()) and (nt.Columns == len(ds.ca.louvain)):
		for row, id in enumerate(ds.ca.louvain):
			nt.ColumnSpecList[row].Type = int(id)

	del ds
	ShowHeatmap(nt.Transpose2(), fileName)

# The following function works for loom fiels from  https://flycellatlas.org/#data
def ImportLoom():
	import scanpy, numpy
	fileName = PromptFile("Loom Files|*.loom")	
	f = scanpy.read_loom(fileName, validate=False)
	
	M = f.X
	if hasattr(M, 'todense'): M = M.todense()
	M = numpy.ascontiguousarray(M, dtype=numpy.float32)
	
	nt = mm.ToTable(M)
	uf = New.UniqueNameFinder()
	if nt.Rows == len(f.obs_names):
		for row, id in enumerate(f.obs_names):
			nt.RowSpecList[row].Id = uf.LookupName(str(id))
	uf.Reset();
	if nt.Columns == len(f.var_names):
		for col, id in enumerate(f.var_names):
			nt.ColumnSpecList[col].Id = uf.LookupName(str(id))
	
	ShowHeatmap(nt, fileName)

ImportLoom()
#ImportLoomX10()
