# Import matrix.mtx.gz files
#
# Samples can be found at https://singlecell.broadinstitute.org/single_cell
#
import os, gzip
import numpy as np
from scipy.io import mmread
vv.Import('AtlasHelp.pyn')

def ReadLines(fname):
	if not os.path.isfile(fname):
		return None
	if fname.endswith('.gz'):
		with gzip.open(fname) as f:
			return list( map(lambda x:x.decode(), f.readlines()) )
	else:
		with open(fname) as f:
			return f.readlines()

def LoadColumnId(nt, fname):
	print(f'F: {fname}')
	lines = ReadLines(fname)
	if lines == None:
		return
	print(f'Lines: {len(lines)}')
	if (len(lines)) == nt.Columns:
		print('Loading column id from ', fname)
		uf = New.UniqueNameFinder()
		for i in range(nt.Columns):
			fs = lines[i].split()
			nt.ColumnSpecList[i].Id = uf.LookupName(fs[0].strip())
			if len(fs)>1:
				nt.ColumnSpecList[i].Name = fs[1]
	
def LoadRowId(nt, fname):
	print(f'F: {fname}')
	lines = ReadLines(fname)
	if lines == None:
		return
	print(f'Lines: {len(lines)}')
	if (len(lines)) == nt.Rows:
		print('Loading column id from ', fname)
		uf = New.UniqueNameFinder()
		for i in range(nt.Rows):
			nt.RowSpecList[i].Id = uf.LookupName(lines[i].strip())

def ImportMtx():
	fileName = PromptFile("Count Matrix|*.mtx.gz|CntMtx|*.mtx")
	
	tb = mmread(fileName)
	tb = tb.toarray()
	tb = np.matrix(tb.transpose())
	tb = tb.astype(np.float64)
	nt = mm.ToTable(tb)

	# samples with this additional info can be found by googling on GSM1116106 or GSM4905030.
	try:
		LoadColumnId(nt, fileName.replace('_matrix.mtx', '_features.tsv'))
		LoadColumnId(nt, fileName.replace('_matrix.mtx', '_genes.tsv'))
		LoadRowId(nt, fileName.replace('_matrix.mtx', '_barcodes.tsv'))
	except:
		print('Failed to load the row/column ids')
	
	ShowHeatmap(nt, fileName)

ImportMtx()

