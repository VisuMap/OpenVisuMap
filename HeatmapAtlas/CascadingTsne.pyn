# CascadingTsne.pyn
#
# This file contains scripts to create multiple maps/embeddings from dataset, 
# then concatenate these maps and embed them in to a single map via tSNE.
#
# -------------------------------------------------------------
import math, time
import numpy as np

def ArcSegmentation(K):
	cx, cy = np.average([(b.X, b.Y) for b in pp.BodyList], axis=0)
	ss = 2.0*math.pi/K
	shift = math.pi + 0.5 * ss
	for b in pp.BodyList:
	  alpha = math.atan2(b.Y-cy, b.X-cx) + shift
	  b.Type = int(alpha/ss) % K
	pp.RedrawBodies()

def RadioSegmentation(K):
   cx, cy = np.average([(b.X, b.Y) for b in pp.BodyList], axis=0)
   minR, maxR = 1e18, 0
   for b in pp.BodyList:
      dx, dy = b.X - cx, b.Y - cy
      R = dx*dx + dy*dy
      minR, maxR = min(minR, R), max(maxR, R)
   minR, maxR = math.sqrt(minR), math.sqrt(maxR)
   ss = (maxR - minR)/K
   for b in pp.BodyList:
      dx, dy = b.X - cx, b.Y - cy
      R = math.sqrt(dx*dx + dy*dy)
      b.Type = min(int(R/ss), K-1)
   pp.RedrawBodies()

def WeightSegmentation(K):
	bs = pp.BodyList
	nt = vv.GetNumberTableView(True)
	colWeight = [math.log(1+it.Value) for it in nt.ColumnMean()]
	colIdxes = nt.IndexOfColumns([b.Id for b in bs])	
	minW, maxW = 1e10, 0
	for i, b in enumerate(bs):
		colW = colWeight[colIdxes[i]]
		minW = min(minW, colW)
		maxW = max(maxW, colW)
	ss = (maxW - minW)/K
	for i, b in enumerate(bs):
		colW = colWeight[colIdxes[i]]
		tIdx = int((colW-minW)/ss)
		b.Type = min(tIdx, K-1)
	pp.RedrawBodies()

def NewTsneMachine(ds, epochs=2000, pp=0.05):
	tt = New.MdsCluster( ds )
	tt.Show()
	tt.Metric = 'Correlation.Cosine Distance'
	tt.Repeats = 1
	tt.ReadOnly = True
	tt.MaxLoops = epochs
	tt.Is3D = False
	tt.InitialExaggeration = 6.0
	tt.FinalExaggeration = 1.0
	tt.PerplexityRatio = pp
	return tt

def CreateCascadingMap( ds, epochs=2000, pp=0.05, repeats=2):
	tt = NewTsneMachine(ds, epochs=2000, pp=0.05)
	tt.Metric = 'EuclideanMetric'
	tt.Repeats = repeats
	tt.Reset().Start().Close()

def DoTest_ByFeature(K):
	global dsMap
	#WeightSegmentation(K)
	#ArcSegmentation(K)
	#RadioSegmentation(K)
	tList = {b.Type for b in pp.BodyList}
	ds = vv.GetNumberTableView(True)	
	tt = NewTsneMachine(ds)
	mpDim = 2
	dsMap = New.NumberTable(ds, len(tList)*mpDim)
	for k, t in enumerate(tList):
		dsM = ds.SelectColumnsById( [b.Id for b in pp.BodyList if b.Type==t] )
		tt.SetTrainingData(dsM)
		tt.Reset().Start().Normalize()
		if not tt.Completed: vv.Return()
		dsMap.CopyValuesFrom(tt.BodyList, (mpDim==3), k*mpDim)
		for i in range(mpDim):
			dsMap.ColumnSpecList[k*mpDim + i].Type = t
	tt.Close()
	CreateCascadingMap(dsMap, epochs=2000, pp=0.1, repeats=2 )

def VpInterpolation(ds, K):
	cc = []
	for t in [0, 1]:
		centers = ds.SelectRowsById( [r.Id for r in ds.RowSpecList if r.Type == t ] )
		cc.append( [it.Value for it in centers.ColumnMean()] )
	return np.linspace(cc[0], cc[1], K)

def VpByCenters(ds):
	cc = []
	tList = {r.Type for r in ds.RowSpecList if r.Type <= 60}
	for t in tList:
		rList = [r.Id for r in ds.RowSpecList if r.Type == t ]
		centers = ds.SelectRowsById(rList)
		cc.append( np.array( [it.Value for it in centers.ColumnMean()] ) )
	return cc

def VpExplicite(ds):
	cc = []
	rList = [b.Id for b in pp.Map.BodyList if b.Highlighted and not b.Disabled]
	centers = ds.SelectRowsById(rList)
	return list( mm.ToNumpy(centers) )

def DoTest_ByViewpoint(K = 16):
	global dsMap
	ds = vv.GetNumberTableView(True)
	#vpList = VpInterpolation(ds, K)
	#vpList = VpByCenters(ds)
	vpList = VpExplicite(ds)
	vp = New.NumberTable(1, ds.Columns)
	tt = NewTsneMachine(ds)
	mpDim = 2
	dsMap = New.NumberTable(ds, len(vpList)*mpDim)
	for k, CC in enumerate(vpList):
		mm.CopyToTable(CC, vp)
		ds.SubBy(vp)
		tt.SetTrainingData(ds)
		tt.Reset().Start().Normalize()
		ds.AddTo(vp)
		if not tt.Completed: vv.Return()
		dsMap.CopyValuesFrom(tt.BodyList, (mpDim==3), k*mpDim)
		for i in range(mpDim):
			dsMap.ColumnSpecList[k*mpDim + i].Type = k
	tt.Close()
	CreateCascadingMap(dsMap, epochs=2000, pp=0.1, repeats=2)

#-----------------------------------------------------------------------

'''
DoTest_ByViewpoint(4)
DoTest_ByFeature(4)
dsMap.ShowHeatMap()

ArcSegmentation(6)
WeightSegmentation(6)
RadioSegmentation(5)
'''
